Algorithm :

Algorithm for Sorting and Displaying Top Marks:

1. Initialize an empty list called `marks` to store the marks of students.

2. Take input for the number of students (`n`):
   - Read `n` from the user.

3. Input marks for each student:
   - For each student (loop from 1 to `n`):
     - Read the marks from the user and append them to the `marks` list.

4. Display the marks of all students:
   - Print the marks list.

5. Initialize a flag variable `flag` to 1.

6. Create a menu using a while loop:
   - Display the menu options:
     - 1. Selection Sort of the marks
     - 2. Bubble Sort of the marks
     - 3. Exit
   - Read the user's choice (`ch`) from the input.

7. Implement the following conditions based on the user's choice:
   - If `ch` is 1:
     - Call the `Selection_Sort` function with the `marks` list.
     - Ask the user if they want to display top marks.
       - If yes, call the `top_five_marks` function.
       - If no, set `flag` to 0 to exit.
   - If `ch` is 2:
     - Call the `Bubble_Sort` function with the `marks` list.
     - Ask the user if they want to display top marks.
       - If yes, call the `top_five_marks` function.
       - If no, set `flag` to 0 to exit.
   - If `ch` is 3:
     - Set `flag` to 0 to exit.
   - If `ch` is not 1, 2, or 3:
     - Print an error message and set `flag` to 0 to exit.

8. End the program.

